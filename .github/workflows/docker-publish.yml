    name: Build and Push Docker Image to GHCR

    # Se ejecuta cada vez que haces 'push' a la rama 'main'
    on:
      push:
        branches: [ "main" ]

    # Define las variables de entorno para la imagen
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }} # Usa tu_usuario/tu_repo como nombre de imagen

    jobs:
      build-and-push:
        runs-on: ubuntu-latest # Usa un servidor Linux de GitHub
        permissions:
          contents: read      # Necesita leer el código
          packages: write     # Necesita escribir en GHCR

        steps:
          # 1. Clona tu repositorio en el servidor de GitHub
          - name: Checkout repository
            uses: actions/checkout@v4

          # 2. Inicia sesión en GitHub Container Registry (GHCR)
          - name: Log in to the Container registry
            uses: docker/login-action@v3
            with:
              registry: ${{ env.REGISTRY }}
              username: ${{ github.actor }} # Tu nombre de usuario de GitHub
              password: ${{ secrets.GITHUB_TOKEN }} # Token automático proporcionado por GitHub Actions

          # 3. Extrae metadatos (como etiquetas) para la imagen Docker
          - name: Extract metadata (tags, labels) for Docker
            id: meta
            uses: docker/metadata-action@v5
            with:
              images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

          # 4. Construye la imagen Docker y la sube a GHCR
          - name: Build and push Docker image
            uses: docker/build-push-action@v5
            with:
              context: . # Usa el directorio raíz (donde está el Dockerfile)
              push: true # ¡Sube la imagen!
              tags: ${{ steps.meta.outputs.tags }} # Usa las etiquetas generadas (ej. latest, rama, commit)
              labels: ${{ steps.meta.outputs.labels }}
    